# Copyright (c) 2022, Moritz E. Beber, Maxime Borry, Jianhong Ou, Sofia Stamouli.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


"""Provide a standardisation service for mOTUs profiles."""


import pandera as pa
from pandera.typing import DataFrame

from taxpasta.application.service import ProfileStandardisationService
from taxpasta.domain.model import StandardProfile

from .motus_profile import MotusProfile


class MotusProfileStandardisationService(ProfileStandardisationService):
    """Define a standardisation service for mOTUs profiles."""

    @classmethod
    @pa.check_types(lazy=True)
    def transform(cls, profile: DataFrame[MotusProfile]) -> DataFrame[StandardProfile]:
        """
        Tidy up and standardize a given mOTUs profile.

        Args:
            profile: A taxonomic profile generated by mOTUs.

        Returns:
            A standardized profile.

        """
        result = profile.loc[
            ~(
                profile[MotusProfile.tax_id].isnull()
                & (profile[MotusProfile.read_count] == 0)
            ),
            [MotusProfile.tax_id, MotusProfile.read_count],
        ].copy()
        result[MotusProfile.tax_id] = (
            result[MotusProfile.tax_id].astype(float).astype(int)
        )
        result[MotusProfile.read_count] = result[MotusProfile.read_count].astype(int)
        result.columns = [StandardProfile.taxonomy_id, StandardProfile.count]
        return result
